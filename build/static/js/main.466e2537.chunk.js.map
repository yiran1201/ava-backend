{"version":3,"sources":["constants/env-constant.js","components/ConversationCard.jsx","components/InfoPanel.jsx","components/MutationInsert.jsx","components/MutationDelete.jsx","components/MutationEditor.jsx","HomePage.jsx","index.jsx"],"names":["origin","socket","io","API","DELETE_CONVERSATIONS","ADD_CONVERSATION","GET_CONVERSATION","DELETE_CONVERSATION","POST_MUTATION","ConversationCard","props","useState","text","setText","index","conversation","liked","useEffect","on","data","id","className","style","marginTop","onClick","onConversation","delConversation","size","likeConversation","InfoPanel","author","stared","total","addConversation","a","axios","post","trim","emit","value","onChange","e","target","disabled","length","delConversations","MutationInsert","setIndex","conversationId","handleMutation","mutation","type","placeholder","onKeyDown","preventDefault","Number","MutationDelete","setLength","MutationEditor","mutations","setMutations","alice","bob","setOrigin","updateConversation","getConversation","get","res","getMutationMessage","clsx","slice","map","i","name","fontSize","HomePage","conversations","setConversations","setConversationId","Set","likes","setLikes","setAuthor","match","useRouteMatch","history","useHistory","getConversations","person","params","includes","push","handleUrl","updateLikesOnConversationsSync","listenConversationDeletion","conversationIds","oldLikes","newLikes","add","deletedId","has","delete","ReactDOM","render","path","component","from","to","document","getElementById"],"mappings":"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","file":"static/js/main.466e2537.chunk.js","sourcesContent":["import io from 'socket.io-client';\n\nconst IN_PROD = process.env.NODE_ENV === 'production';\nconst origin = IN_PROD ? '' : 'http://localhost:5000';\nconst socket = io(origin);\n\nconst API = {\n  DELETE_CONVERSATIONS: `${origin}/conversations`,\n  ADD_CONVERSATION: `${origin}/conversation`,\n  GET_CONVERSATION: `${origin}/conversation`,\n  DELETE_CONVERSATION: `${origin}/conversation`,\n  POST_MUTATION: `${origin}/mutations`\n};\n\nexport {socket, API};\n","import './ConversationCard.css';\nimport {AiFillStar, AiOutlineStar} from 'react-icons/ai';\nimport {BsTrashFill} from 'react-icons/bs';\nimport {useEffect, useState} from 'react';\nimport {socket} from '../constants/env-constant';\nconst ConversationCard = (props) => {\n  const [text, setText] = useState('');\n  const {index, conversation, liked} = props;\n  const onConversation = () => {\n    props.onConversation(conversation.id);\n  };\n\n  const likeConversation = () => {\n    props.likeConversation(conversation.id);\n  };\n\n  const delConversation = () => {\n    props.delConversation(conversation.id);\n  };\n\n  const updateConversation = () => {\n    socket.on('updateConversation', (data) => {\n      const {id, text} = data;\n      if (id !== conversation.id) return;\n      setText(text);\n    });\n  };\n\n  useEffect(() => {\n    updateConversation();\n    setText(conversation.text);\n  }, [conversation]);\n\n  return (\n    <div\n      className='conversation-card p-2 rounded'\n      style={{marginTop: index === 0 ? 0 : 15}}>\n      <div className='text-muted index'>{`#${index + 1}`}</div>\n      <div>\n        <span className='card-title' onClick={onConversation}>\n          {text}\n        </span>\n      </div>\n      <div className='d-flex justify-content-end'>\n        <span className='trash mr-1' onClick={delConversation}>\n          <BsTrashFill size='1.2rem' />\n        </span>\n        <span className='star' onClick={likeConversation}>\n          {liked ? (\n            <AiFillStar size='1.2rem' />\n          ) : (\n            <AiOutlineStar size='1.2rem' />\n          )}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default ConversationCard;\n","import axios from 'axios';\nimport {useState} from 'react';\nimport {API, socket} from '../constants/env-constant';\nimport './InfoPanel.css';\n\nconst InfoPanel = (props) => {\n  const [text, setText] = useState('');\n  const {author, stared, total} = props;\n  const addConversation = async () => {\n    await axios.post(API.ADD_CONVERSATION, {text: text.trim()});\n    setText('');\n    socket.emit('syncConversations');\n  };\n\n  return (\n    <div className='info-panel d-flex flex-column'>\n      <div className='text-success d-flex align-items-center'>\n        <div className='dot mr-2 bg-success'></div>\n        <span className='author'>{author}</span>\n      </div>\n\n      <div className='mt-2'>\n        <div className='label'>Stared Convs</div>\n        <div className='text-warning'>{stared}</div>\n      </div>\n\n      <div className='mt-2'>\n        <div className='label'>Total Convs</div>\n        <div className='text-info'>{total}</div>\n      </div>\n\n      <div className='mt-auto' />\n      <textarea value={text} onChange={(e) => setText(e.target.value)} />\n      <button\n        className='btn btn-success btn-sm btn-block mt-2'\n        onClick={addConversation}\n        disabled={text.length === 0}>\n        Add Conv\n      </button>\n      <button\n        className='btn btn-danger btn-sm btn-block mt-2'\n        onClick={props.delConversations}>\n        Del Convs\n      </button>\n    </div>\n  );\n};\n\nexport default InfoPanel;\n","import './MutationEditor.css';\n\nimport {useState} from 'react';\n\nimport axios from 'axios';\n\nimport {API, socket} from '../constants/env-constant';\n\nconst MutationInsert = (props) => {\n  const [index, setIndex] = useState(0);\n  const [text, setText] = useState('');\n  const {conversationId, author, origin} = props;\n\n  const handleMutation = async () => {\n    const mutation = {\n      author,\n      conversationId,\n      data: {index, length: 0, text, type: 'insert'},\n      origin,\n    };\n    await axios.post(API.POST_MUTATION, mutation);\n    setIndex(0);\n    setText('');\n    socket.emit('syncConversation', conversationId);\n  };\n\n  return (\n    <div>\n      <div className='mt-2'>\n        <div className='row'>\n          <div className='col-4 d-flex flex-column'>\n            <div className='label'>Index</div>\n            <input\n              placeholder='index'\n              type='number'\n              onKeyDown={(e) => e.preventDefault()}\n              value={index}\n              onChange={(e) => {\n                const value = Number(e.target.value);\n                if (value < 0) return;\n                setIndex(value);\n              }}\n            />\n          </div>\n\n          <div className='col-8 d-flex flex-column'>\n            <div className='label'>Text</div>\n            <input\n              placeholder='word'\n              value={text}\n              onChange={(e) => setText(e.target.value)}\n            />\n          </div>\n        </div>\n      </div>\n\n      <button\n        className='btn btn-success btn-sm btn-block mt-2'\n        onClick={handleMutation}\n        disabled={text.trim().length === 0}>\n        Insert\n      </button>\n    </div>\n  );\n};\n\nexport default MutationInsert;\n","import './MutationEditor.css';\n\nimport {useState} from 'react';\n\nimport axios from 'axios';\n\nimport {API, socket} from '../constants/env-constant';\n\nconst MutationDelete = (props) => {\n  const [index, setIndex] = useState(0);\n  const [length, setLength] = useState(1);\n  const {conversationId, author, origin} = props;\n\n  const handleMutation = async () => {\n    const mutation = {\n      author,\n      conversationId,\n      data: {index, length, text: '', type: 'delete'},\n      origin,\n    };\n    await axios.post(API.POST_MUTATION, mutation);\n    setIndex(0);\n    setLength(1);\n    socket.emit('syncConversation', conversationId);\n  };\n\n  return (\n    <div>\n      <div className='mt-2'>\n        <div className='row'>\n          <div className='col-4 d-flex flex-column'>\n            <div className='label'>Index</div>\n            <input\n              placeholder='index'\n              type='number'\n              onKeyDown={(e) => e.preventDefault()}\n              value={index}\n              onChange={(e) => {\n                const value = Number(e.target.value);\n                if (value < 0) return;\n                setIndex(value);\n              }}\n            />\n          </div>\n\n          <div className='col-8 d-flex flex-column'>\n            <div className='label'>Len</div>\n            <input\n              placeholder='length'\n              type='number'\n              onKeyDown={(e) => e.preventDefault()}\n              value={length}\n              onChange={(e) => {\n                const value = Number(e.target.value);\n                if (value < 1) return;\n                setLength(value);\n              }}\n            />\n          </div>\n        </div>\n      </div>\n\n      <button\n        className='btn btn-danger btn-sm btn-block mt-2'\n        onClick={handleMutation}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nexport default MutationDelete;\n","import './MutationEditor.css';\n\nimport {useEffect, useState} from 'react';\n\nimport axios from 'axios';\n\nimport {API, socket} from '../constants/env-constant';\nimport {isEmpty} from 'lodash';\nimport MutationInsert from './MutationInsert';\nimport MutationDelete from './MutationDelete';\nimport clsx from 'clsx';\n\nconst MutationEditor = (props) => {\n  const [text, setText] = useState('');\n  const [mutations, setMutations] = useState([]);\n  const [origin, setOrigin] = useState({alice: 0, bob: 0});\n\n  const {conversationId, author} = props;\n  useEffect(() => {\n    updateConversation();\n  }, []);\n\n  useEffect(() => {\n    getConversation();\n  }, [conversationId]);\n\n  const getConversation = async () => {\n    const res = await axios.get(`${API.GET_CONVERSATION}/${conversationId}`);\n    setText(res.data.text);\n    setMutations(res.data.mutations);\n    setOrigin(res.data.origin);\n  };\n\n  const updateConversation = () => {\n    socket.on('updateConversation', (data) => {\n      const {mutations, text, origin} = data;\n      setMutations(mutations);\n      setText(text);\n      setOrigin(origin);\n    });\n  };\n\n  const getMutationMessage = (mutation) => {\n    const {author} = mutation;\n    const {type, index, length, text} = mutation.data;\n    const {alice, bob} = mutation.origin;\n\n    return (\n      <>\n        <span className='text-primary text-uppercase mr-1'>{author[0]}</span>\n        <span>{`(${bob}, ${alice})`}</span>\n        <span\n          className={clsx(\n            'text-uppercase',\n            'mx-1',\n            type === 'insert' ? 'text-success' : 'text-danger'\n          )}>\n          {type.slice(0, 3)}\n        </span>\n        <span>{index}</span>\n        <span>:</span>\n        <span>{type === 'insert' ? `'${text}'` : length}</span>\n      </>\n    );\n  };\n\n  const Conversation = () => {\n    return (\n      <>\n        <div className='mt-2'>\n          <div className='label'>Text</div>\n          <div className='text-primary'>{text}</div>\n        </div>\n\n        <div className='mt-2'>\n          <div className='label'>Mutation History</div>\n          {mutations.length > 0 &&\n            mutations.map((mutation, i) => (\n              <div\n                key={`${mutation.author}-${i}`}\n                className='border rounded p-1 mt-1 d-flex'>\n                {getMutationMessage(mutation)}\n              </div>\n            ))}\n\n          {mutations.length === 0 && (\n            <div>This conversation does not have any mutations</div>\n          )}\n\n          <div className='mt-2'>\n            <div className='label'>Current State</div>\n            <div className='d-flex align-items-center'>\n              {['alice', 'bob'].map((name) => (\n                <div\n                  key={name}\n                  className={clsx(\n                    'd-flex flex-column align-items-center mr-3',\n                    author === name ? 'text-success' : 'text-info'\n                  )}>\n                  <span className='text-capitalize'>{name}</span>\n                  <span>{origin[name]}</span>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          <div className='mt-2'>\n            <div className='label'>Mutation Operation</div>\n            <div className='text-primary' style={{fontSize: '0.75rem'}}>\n              Tips: Use ▲ / ▼ for number input\n            </div>\n            <MutationInsert\n              author={author}\n              conversationId={conversationId}\n              origin={origin}\n            />\n            <MutationDelete\n              author={author}\n              conversationId={conversationId}\n              origin={origin}\n            />\n          </div>\n        </div>\n      </>\n    );\n  };\n\n  return (\n    <div>\n      <div>\n        <div className='label'>Conv ID</div>\n        <div className='id-text'>{conversationId}</div>\n      </div>\n\n      {Conversation()}\n    </div>\n  );\n};\n\nexport default MutationEditor;\n","import './HomePage.css';\n\nimport {useEffect, useState} from 'react';\n\nimport {useHistory, useRouteMatch} from 'react-router-dom';\n\nimport ConversationCard from './components/ConversationCard';\nimport InfoPanel from './components/InfoPanel';\nimport {API, socket} from './constants/env-constant';\nimport axios from 'axios';\nimport MutationEditor from './components/MutationEditor';\n\nconst HomePage = () => {\n  const [conversations, setConversations] = useState([]);\n  const [conversationId, setConversationId] = useState('');\n  const [likes, setLikes] = useState(new Set());\n  const [author, setAuthor] = useState('');\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  const handleUrl = () => {\n    let person = match.params.author;\n    if (!['alice', 'bob'].includes(person)) {\n      person = 'alice';\n      history.push(`/${person}`);\n    }\n    setAuthor(person);\n  };\n\n  useEffect(() => {\n    socket.emit('syncConversations');\n    getConversations();\n    handleUrl();\n  }, []);\n\n  useEffect(() => {\n    updateLikesOnConversationsSync();\n  }, [conversations]);\n\n  useEffect(() => {\n    listenConversationDeletion();\n  }, [conversationId]);\n\n  const updateLikesOnConversationsSync = () => {\n    const conversationIds = conversations.map(({id}) => id);\n    const oldLikes = [...likes];\n    const newLikes = new Set();\n    for (const id of oldLikes) {\n      if (conversationIds.includes(id)) newLikes.add(id);\n    }\n    setLikes(newLikes);\n  };\n\n  const getConversations = () => {\n    socket.on('retrieveConversations', (data) => {\n      setConversations(data);\n    });\n  };\n\n  const listenConversationDeletion = () => {\n    socket.on('clearConversation', (deletedId) => {\n      if (deletedId === conversationId) setConversationId('');\n    });\n  };\n\n  const onConversation = (conversationId) => {\n    setConversationId(conversationId);\n  };\n\n  const likeConversation = (conversationId) => {\n    const newLikes = new Set(likes);\n    if (newLikes.has(conversationId)) {\n      newLikes.delete(conversationId);\n    } else {\n      newLikes.add(conversationId);\n    }\n    setLikes(newLikes);\n  };\n\n  const delConversations = async () => {\n    await axios.delete(API.DELETE_CONVERSATIONS);\n    socket.emit('syncConversations');\n    setLikes(new Set());\n    setConversationId('');\n  };\n\n  const delConversation = async (id) => {\n    await axios.delete(`${API.DELETE_CONVERSATION}/${id}`);\n    socket.emit('syncConversations');\n    socket.emit('deleteConversation', id);\n    if (likes.has(id)) {\n      const newLikes = new Set(likes);\n      newLikes.delete(id);\n      setLikes(newLikes);\n    }\n  };\n\n  return (\n    <div className='vh-100 mx-auto d-flex justify-content-center'>\n      <div className='row homepage'>\n        <div className='col-12 col-sm-4 border-right p-3 panel'>\n          {conversations.length === 0 && (\n            <div className='text-danger text-center'>Conversation Empty</div>\n          )}\n          {conversations.map((conversation, i) => (\n            <ConversationCard\n              key={conversation.id}\n              conversation={conversation}\n              index={i}\n              onConversation={onConversation}\n              likeConversation={likeConversation}\n              delConversation={delConversation}\n              liked={likes.has(conversation.id)}\n            />\n          ))}\n        </div>\n        <div className='col-12 col-sm-5 p-3 panel'>\n          {!!conversationId ? (\n            <MutationEditor conversationId={conversationId} author={author} />\n          ) : (\n            <div className='text-info'>\n              Please select a conversation to edit\n            </div>\n          )}\n        </div>\n        <div className='col-12 col-sm-3 border-left p-3 panel'>\n          <InfoPanel\n            author={author}\n            stared={likes.size}\n            total={conversations.length}\n            delConversations={delConversations}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\n\nimport HomePage from './HomePage';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route path='/:author' component={HomePage} />\n      <Redirect from='/' to='/alice' />\n    </Switch>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}